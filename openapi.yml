openapi: 3.0.0
info:
  title: Palomma API
  description: This API includes functionality of the Palomma API.
  version: 1.0.0
servers:
  - url: https://prod.api.palomma.com/v0
    description: Production server
  - url: https://sandbox.api.palomma.com/v0
    description: Sandbox server
security:
  - BearerAuth: []
paths:
  /customers:
    post:
      summary: Creates a new customer
      operationId: createCustomer
      tags:
        - customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - documentType
                - documentNumber
                - email
                - phoneNumber
              properties:
                reference:
                  type: string
                  description: Reference sent in by merchant to identify customer.
                name:
                  type: string
                  description: First and last name for a natural person, and company name for a juridical person.
                documentType:
                  type: string
                  description: Colombian ID type for customer.
                  enum:
                    - cc
                    - ce
                    - nit
                documentNumber:
                  type: string
                  description: Colombian ID number for customer.
                email:
                  type: string
                  description: Customer’s email.
                phoneNumber:
                  type: string
                  description: Customer’s phone number.
      responses:
        "201":
          description: Customer created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    get:
      summary: Retrieve customers
      operationId: listCustomers
      tags:
        - customers
      responses:
        "200":
          description: List of customers successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Customer"
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /customers/{customerId}:
    get:
      summary: Retrieve a Customer
      operationId: getCustomerById
      tags:
        - Customers
      parameters:
        - name: customerId
          in: path
          required: true
          description: Unique identifier of the customer.
          schema:
            type: string
      responses:
        "200":
          description: Customer retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Customer not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /payinLinks:
    post:
      summary: Creates a new Payin Link
      operationId: createPayinLink
      tags:
        - Payin Links
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/PayinLinkPSE"
                - $ref: "#/components/schemas/PayinLinkBancolombiaButton"
                - $ref: "#/components/schemas/PayinLinkNequiButton"
                - $ref: "#/components/schemas/PayinLinkCard"
      responses:
        "201":
          description: Payin Link created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayinLink"
        "400":
          description: Bad Request - Invalid input provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the error due to bad request.
        "401":
          description: Unauthorized - Authentication credentials were not provided or are invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the error due to unauthorized access.
        "500":
          description: Internal Server Error - An error occurred on the server
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the internal server error.
    get:
      summary: Retrieve payin link
      operationId: listPayinLinks
      tags:
        - Payin Links
      responses:
        "200":
          description: List of payin links successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PayinLink"
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /payinLinks/{payinLinkId}:
    get:
      summary: Retrieve a Payin Link
      operationId: getPayinLinkById
      tags:
        - Payin Links
      parameters:
        - name: payinLinkId
          in: path
          required: true
          description: Unique identifier of the payin link.
          schema:
            type: string
      responses:
        "200":
          description: Payin Link retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayinLink"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Payin Link not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /payinSources:
    post:
      summary: Creates a new Payin Source
      operationId: createPayinSource
      tags:
        - Payin Sources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/PayinSourceBankAccount"
                - $ref: "#/components/schemas/PayinSourceBancolombiaToken"
                - $ref: "#/components/schemas/PayinSourceNequiToken"
      responses:
        "201":
          description: Payin Source created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayinSource"
        "400":
          description: Bad Request - Invalid input provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the error due to bad request.
        "401":
          description: Unauthorized - Authentication credentials were not provided or are invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the error due to unauthorized access.
        "500":
          description: Internal Server Error - An error occurred on the server
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the internal server error.
    get:
      summary: Retrieve payin source
      operationId: listPayinSources
      tags:
        - Payin Sources
      responses:
        "200":
          description: List of payin sources successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PayinSource"
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /payinSources/{payinSourceId}:
    get:
      summary: Retrieve a Payin Source
      operationId: getPayinSourceById
      tags:
        - Payin Sources
      parameters:
        - name: payinSourceId
          in: path
          required: true
          description: Unique identifier of the payin source.
          schema:
            type: string
      responses:
        "200":
          description: Payin Source retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayinSource"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Payin Source not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /payinRequests:
    post:
      summary: Creates a new Payin Request
      operationId: createPayinRequest
      tags:
        - Payin Requests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - payinSourceId
                - amount
              properties:
                reference:
                  type: string
                  description: Reference sent in by merchant to identify Payin Request.
                payinSourceId:
                  type: string
                  description: ID indicating which Payment Source to debit from.
                amount:
                  type: number
                  description: Amount to be paid in COP.
                targetMerchantAccountId:
                  description: An optional account ID of the target merchant account for this Payin Request.
                  type: string
      responses:
        "201":
          description: Payin Request created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayinRequest"
        "400":
          description: Bad Request - Invalid input provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the error due to bad request.
        "401":
          description: Unauthorized - Authentication credentials were not provided or are invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the error due to unauthorized access.
        "500":
          description: Internal Server Error - An error occurred on the server
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the internal server error.
    get:
      summary: Retrieve payin requests
      operationId: listPayinRequests
      tags:
        - Payin Requests
      responses:
        "200":
          description: List of payin requests successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PayinRequest"
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /payinRequests/{payinRequestId}:
    get:
      summary: Retrieve a Payin Request
      operationId: getPayinRequestById
      tags:
        - Payin Requests
      parameters:
        - name: payinRequestId
          in: path
          required: true
          description: Unique identifier of the payin request.
          schema:
            type: string
      responses:
        "200":
          description: Payin Request retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayinRequest"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Payin Request not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /payoutTargets:
    post:
      summary: Creates a new Payout Target
      operationId: createPayoutTarget
      tags:
        - Payout Targets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/PayoutTargetBankAccount"
                - $ref: "#/components/schemas/PayoutTargetTransfiya"
      responses:
        "201":
          description: Payout Target created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayoutTarget"
        "400":
          description: Bad Request - Invalid input provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the error due to bad request.
        "401":
          description: Unauthorized - Authentication credentials were not provided or are invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the error due to unauthorized access.
        "500":
          description: Internal Server Error - An error occurred on the server
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the internal server error.
    get:
      summary: Retrieve payout targets
      operationId: listPayoutTargets
      tags:
        - Payout Targets
      responses:
        "200":
          description: List of payout targets successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PayoutTarget"
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /payoutTargets/{payoutTargetId}:
    get:
      summary: Retrieve a Payout Target
      operationId: getPayoutTargetById
      tags:
        - Payout Targets
      parameters:
        - name: payoutTargetId
          in: path
          required: true
          description: Unique identifier of the payout target.
          schema:
            type: string
      responses:
        "200":
          description: Payout target retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayoutTarget"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Payout Target not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /payoutRequests:
    post:
      summary: Creates a new Payout Request
      operationId: createPayoutRequest
      tags:
        - Payout Requests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - payoutTargetId
                - amount
              properties:
                reference:
                  type: string
                  description: Reference sent in by merchant to identify Payout Request.
                sourceMerchantAccountId:
                  description: An optional account ID of the source merchant account for this Payout Request.
                  type: string
                payoutTargetId:
                  type: string
                  description: Payout Target to send money to.
                amount:
                  type: number
                  description: Amount to be sent in COP.
      responses:
        "201":
          description: Payout Request created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayoutRequest"
        "400":
          description: Bad Request - Invalid input provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the error due to bad request.
        "401":
          description: Unauthorized - Authentication credentials were not provided or are invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the error due to unauthorized access.
        "500":
          description: Internal Server Error - An error occurred on the server
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the internal server error.
    get:
      summary: Retrieve payout requests
      operationId: listPayoutRequests
      tags:
        - Payout Requests
      responses:
        "200":
          description: List of payout requests successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PayoutRequest"
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /payoutRequests/{payoutRequestId}:
    get:
      summary: Retrieve a Payout Request
      operationId: getPayoutRequestById
      tags:
        - Payout Requests
      parameters:
        - name: payoutRequestId
          in: path
          required: true
          description: Unique identifier of the payout request.
          schema:
            type: string
      responses:
        "200":
          description: Payout Request retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayoutRequest"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Payout Request not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this customer.
          example: 01HPR57X6QR5ZRKEEKBSDBW4RA
        reference:
          type: string
          description: Reference sent in by merchant to identify customer.
        name:
          type: string
          description: First and last name for a natural person, and company name for a juridical person.
          example: Pepito Perez
        documentType:
          type: string
          description: Colombian ID type for customer.
          enum:
            - cc
            - ce
            - nit
        documentNumber:
          type: string
          description: Colombian ID number for customer.
          example: "1037551022"
        email:
          type: string
          description: Customer’s email.
          example: pepito@gmail.com
        phoneNumber:
          type: string
          description: Customer’s phone number.
          example: "3013111111"
        createdAt:
          type: string
          format: date-time
          description: ISO string indicating when the customer was created.
        updatedAt:
          type: string
          format: date-time
          description: ISO string indicating when the customer was updated.
    Bank:
      type: string
      description: The list of banks supported by the Palomma API.
      enum:
        - alianza
        - ban100
        - bancamia
        - bancoagrario
        - avvillas
        - bbva
        - bancocajasocial
        - coopcentral
        - davivienda
        - bancodebogota
        - bancodeoccidente
        - falabella
        - finandina
        - gnbsudameris
        - itau
        - jpmorgancolombia
        - mundomujer
        - pichincha
        - bancopopular
        - santander
        - serfinanza
        - union
        - bancolombia
        - bancoomeva
        - cfa
        - citibank
        - coltefinanciera
        - confiar
        - coofinep
        - cotrafa
        - dale
        - daviplata
        - iris
        - lulo
        - movii
        - nequi
        - rappipay
        - scotiabankcolpatria
    CustomerDetails:
      type: object
      properties:
        reference:
          type: string
          description: An optional reference provided by the merchant to identify the customer.
        name:
          type: string
          description: First and last name for a natural person, and company name for a juridical person.
          example: "Pepito Perez"
        documentType:
          type: string
          description: Colombian ID type for customer.
          enum:
            - cc
            - ce
            - nit
        documentNumber:
          type: string
          description: Colombian ID number for customer.
          example: "1037551022"
        email:
          type: string
          description: Customer’s email.
          format: email
          example: "pepito@gmail.com"
        phoneNumber:
          type: string
          description: Customer’s phone number.
          example: "3013111111"
    Card:
      type: object
      required:
        - cardNumber
        - expirationMonth
        - expirationYear
        - cvv
      properties:
        cardNumber:
          type: string
          description: The card number without spaces or dashes.
          example: "4111111111111111"
          pattern: '^\d{13,19}$' # Basic validation for 13 to 19 digit numbers
        expirationMonth:
          type: string
          description: The month when the card expires, typically in MM format.
          example: "12"
          pattern: "^(0[1-9]|1[0-2])$" # Basic validation for month format
        expirationYear:
          type: string
          description: The year when the card expires, typically in YYYY format.
          example: "2023"
          pattern: '^\d{4}$' # Basic validation for 4 digit year
        cvv:
          type: string
          description: The card verification value/code, typically 3 or 4 digits.
          example: "123"
          pattern: '^\d{3,4}$' # Basic validation for 3 to 4 digit numbers
    PayinLinkPSE:
      title: PSE
      type: object
      required:
        - customerId
        - redirectUrl
        - amount
        - type
        - bank
      properties:
        reference:
          type: string
          description: An optional reference provided by the merchant to identify the Payin Link.
        description:
          type: string
          description: An optional description of the Payin Link.
        customerId:
          type: string
          description: The ID of the customer for whom the Payin Link is created.
        redirectUrl:
          type: string
          description: URL to which the customer will be redirected after the payment process.
        amount:
          type: number
          description: The amount to be paid in COP.
        type:
          type: string
          enum:
            - pse
        bank:
          $ref: "#/components/schemas/Bank"
        targetMerchantAccountId:
          type: string
          description: An optional account ID of the target merchant account for this Payin Link.
    PayinLink:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the Payin Link.
          example: 01HPR5TEDFKT498V8CYY3RPCXP
        reference:
          type: string
          description: An optional reference provided by the merchant to identify the Payin Link.
        description:
          type: string
          description: Description of the Payin Link.
        customerId:
          type: string
          description: The ID of the customer for whom the Payin Link is created.
          example: 01HPR57X6QR5ZRKEEKBSDBW4RA
        customerDetails:
          $ref: "#/components/schemas/CustomerDetails"
        status:
          type: string
          enum:
            - pending
            - processing
            - approved
            - cancelled
          example: approved
          description: The current status of the Payin Link.
        paymentUrl:
          type: string
          description: URL to which the customer can go to complete the payment.
          example: http://payments.palomma.com/payinLinks?payinLinkId=01HPR5TEDFKT498V8CYY3RPCXP
        redirectUrl:
          type: string
          description: URL to which the customer will be redirected after the payment process.
          example: http://merchant.com/checkout
        amount:
          type: number
          description: The total amount to be paid in COP.
          example: 100000
        amountCollected:
          type: number
          description: The amount that has been collected in COP.
          example: 100000
        fee:
          type: number
          description: Any fee associated with the Payin Link.
          example: 500
        type:
          type: string
          description: The type of Payin Link
          enum:
            - pse
            - bancolombiaButton
            - nequiButton
            - card
        targetMerchantAccountId:
          type: string
          description: Account ID of the target merchant account for this Payin Link.
          example: default
        createdAt:
          type: string
          format: date-time
          description: ISO string representing when the Payin Link was created.
        updatedAt:
          type: string
          format: date-time
          description: ISO string representing when the Payin Link was last updated.
    PayinLinkBancolombiaButton:
      title: Bancolombia Button
      type: object
      required:
        - customerId
        - redirectUrl
        - amount
        - type
      properties:
        reference:
          type: string
          description: An optional reference provided by the merchant to identify the Payin Link.
        description:
          type: string
          description: An optional description of the Payin Link.
        customerId:
          type: string
          description: The ID of the customer for whom the Payin Link is created.
        redirectUrl:
          type: string
          description: URL to which the customer will be redirected after the payment process.
        amount:
          type: number
          description: The amount to be paid in COP.
        type:
          type: string
          enum:
            - bancolombiaButton
        targetMerchantAccountId:
          type: string
          description: An optional account ID of the target merchant account for this Payin Link.
    PayinLinkNequiButton:
      title: Nequi Button
      type: object
      required:
        - customerId
        - redirectUrl
        - amount
        - type
        - phoneNumber
      properties:
        reference:
          type: string
          description: An optional reference provided by the merchant to identify the Payin Link.
        description:
          type: string
          description: An optional description of the Payin Link.
        customerId:
          type: string
          description: The ID of the customer for whom the Payin Link is created.
        redirectUrl:
          type: string
          description: URL to which the customer will be redirected after the payment process.
        amount:
          type: number
          description: The amount to be paid in COP.
        type:
          type: string
          enum:
            - nequiButton
        phoneNumber:
          type: string
          description: The phone number of the customer, required for Nequi payments.
        targetMerchantAccountId:
          type: string
          description: An optional account ID of the target merchant account for this Payin Link.
    PayinLinkCard:
      title: Card
      type: object
      required:
        - customerId
        - redirectUrl
        - amount
        - type
        - card
      properties:
        reference:
          type: string
          description: An optional reference provided by the merchant to identify the Payin Link.
        description:
          type: string
          description: An optional description of the Payin Link.
        customerId:
          type: string
          description: The ID of the customer for whom the Payin Link is created.
        redirectUrl:
          type: string
          description: URL to which the customer will be redirected after the payment process.
        amount:
          type: number
          description: The amount to be paid in COP.
        type:
          type: string
          enum:
            - card
        card:
          $ref: "#/components/schemas/Card"
        targetMerchantAccountId:
          type: string
          description: An optional account ID of the target merchant account for this Payin Link.
    PayinSourceBancolombiaToken:
      title: Bancolombia Token
      type: object
      required:
        - customerId
        - redirectUrl
        - type
      properties:
        reference:
          type: string
          description: An optional reference provided by the merchant to identify the Payin Source.
        description:
          type: string
          description: An optional description of the Payin Source.
        customerId:
          type: string
          description: The ID of the customer for whom the Payin Source is created.
        redirectUrl:
          type: string
          description: URL to which the customer will be redirected after the authorization process.
        type:
          type: string
          enum:
            - bancolombiaToken
    PayinSourceNequiToken:
      title: Nequi Token
      type: object
      required:
        - customerId
        - redirectUrl
        - type
        - phoneNumber
      properties:
        reference:
          type: string
          description: An optional reference provided by the merchant to identify the Payin Source.
        description:
          type: string
          description: An optional description of the Payin Source.
        customerId:
          type: string
          description: The ID of the customer for whom the Payin Source is created.
        redirectUrl:
          type: string
          description: URL to which the customer will be redirected after the authorization process.
        type:
          type: string
          enum:
            - nequiToken
        phoneNumber:
          type: string
          description: Customer’s phone number.
    PayinSourceBankAccount:
      title: Bank Account
      type: object
      required:
        - customerId
        - redirectUrl
        - type
        - bankAccount
      properties:
        reference:
          type: string
          description: An optional reference provided by the merchant to identify the Payin Source.
        description:
          type: string
          description: An optional description of the Payin Source.
        customerId:
          type: string
          description: The ID of the customer for whom the Payin Source is created.
        redirectUrl:
          type: string
          description: URL to which the customer will be redirected after the authorization process.
        type:
          type: string
          enum:
            - bankAccount
        phoneNumber:
          type: string
          description: Customer’s phone number.
        partialPayinsEnabled:
          type: boolean
          description: Only available for bancolombia. Partial debit will be made if the account does not sufficient funds to debit the total amount.
        authRequired:
          type: boolean
          description: Determines whether the bank account must be verified before debits are made.
    PayinSource:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this Payin Source.
          example: 01HPR7A40E44S0WDR189YXA8GH
        reference:
          type: string
          description: Reference sent in by merchant to identify Payin Source.
        description:
          type: string
          description: An extra metadata field that can be included for visibility.
        customerId:
          type: string
          description: Reference to customer who owns this Payin Source.
        customerDetails:
          $ref: "#/components/schemas/CustomerDetails"
        status:
          type: string
          description: Status of the Payin Source.
          enum: [pending, processing, active, cancelled]
        statusMessage:
          type: string
          description: Further detail on the status of the Payin Source.
        authUrl:
          type: string
          description: URL where the customer should be redirected to complete the account authentication and debit authorization.
        redirectUrl:
          type: string
          description: URL where the customer will be redirected after auth flow.
        partialPayinsEnabled:
          type: boolean
          description: Indicates whether partial payins are enabled.
        type:
          type: string
          description: Type of Payin Source created.
          enum: [bankAccount, bancolombiaToken, nequiToken]
        createdAt:
          type: string
          format: date-time
          description: ISO string indicating when the Payin Source was created.
        updatedAt:
          type: string
          format: date-time
          description: ISO string indicating when the Payin Source was last updated.
    PayinSourceDetails:
      type: object
      properties:
        reference:
          type: string
          description: Reference sent in by merchant to identify Payin Source.
        description:
          type: string
          description: An extra metadata field that can be included for visibility.
        partialPayinsEnabled:
          type: boolean
          description: Indicates whether partial payins are enabled.
        type:
          type: string
          description: Type of Payin Source created.
          enum: [bankAccount, bancolombiaToken, nequiToken]
    BankAccount:
      type: object
      properties:
        bank:
          $ref: "#/components/schemas/Bank"
        accountType:
          type: string
          description: The type of the bank account.
          enum:
            - savings
            - checking
        accountNumber:
          type: string
          description: The bank account number.
    PayinRequest:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this Payin Request.
          example: 01HPR83V7JBNJTKT303NTY3YGA
        reference:
          type: string
          description: Reference sent in by merchant to identify Payin Request.
        customerId:
          type: string
          description: Reference to customer who owns the Payin Source from which the Payin Request was created.
          example: 01HPR57X6QR5ZRKEEKBSDBW4RA
        customerDetails:
          $ref: "#/components/schemas/CustomerDetails"
          description: Details about the customer who owns the Payin Source from which the Payin Request was created.
        payinSourceId:
          type: string
          description: Reference to Payin Source from which the Payin Request was created.
          example: 01HPR7A40E44S0WDR189YXA8GH
        payinSourceDetails:
          $ref: "#/components/schemas/PayinSourceDetails"
          description: Details about the Payin Source from which the Payin Request was created.
        status:
          type: string
          enum:
            - processing
            - approved
            - partial
            - cancelled
          description: Status of the Payin Request.
          example: approved
        statusMessage:
          type: string
          description: Gives further detail on the status of the Payin Request. Only present when status is "cancelled".
        amount:
          type: number
          description: Amount to collect from the customer’s Payin Source. Must be an integer.
          example: 100000
        amountCollected:
          type: number
          description: Amount collected by Payin Request. Starts at 0 and changes on status change to "approved" or "partial".
          example: 100000
        fee:
          type: number
          description: Fee charged for the transaction. This fee will be subtracted from amountCollected at settlement time.
          example: 500
        targetMerchantAccountId:
          type: string
          description: Reference to Merchant Account. Safe to ignore if Merchant Accounts are not being used.
        createdAt:
          type: string
          format: date-time
          description: ISO string indicating when the payin request was created.
        updatedAt:
          type: string
          format: date-time
          description: ISO string indicating when the payin request was last updated.
      required:
        - id
        - targetMerchantAccountId
        - customerId
        - payinSourceId
        - status
        - amount
        - amountCollected
        - fee
        - createdAt
        - updatedAt
    PayoutTargetBankAccount:
      title: Bank Account
      type: object
      required:
        - customerId
        - redirectUrl
        - type
        - bankAccount
      properties:
        reference:
          type: string
          description: An optional reference provided by the merchant to identify the Payout Target.
        description:
          type: string
          description: An optional description of the Payout Target.
        customerId:
          type: string
          description: The ID of the customer for whom the Payout Target is created.
        redirectUrl:
          type: string
          description: URL to which the customer will be redirected after the authorization process.
        type:
          type: string
          enum:
            - bankAccount
    PayoutTargetTransfiya:
      title: Transfiya
      type: object
      required:
        - customerId
        - redirectUrl
        - type
        - bankAccount
      properties:
        reference:
          type: string
          description: An optional reference provided by the merchant to identify the Payout Target.
        description:
          type: string
          description: An optional description of the Payout Target.
        customerId:
          type: string
          description: The ID of the customer for whom the Payout Target is created.
        redirectUrl:
          type: string
          description: URL to which the customer will be redirected after the authorization process.
        type:
          type: string
          enum:
            - transfiya
        phoneNumber:
          type: string
          description: Customer’s phone number.
    PayoutTarget:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this Payout Target.
          example: 01HPR8S7YF43PV3QV16TZDC80P
        reference:
          type: string
          description: Reference sent in by merchant to identify Payout Target.
        description:
          type: string
          description: An extra metadata field that can be included for visibility.
        customerId:
          type: string
          description: Reference to customer who owns this Payout Target.
          example: 01HPR57X6QR5ZRKEEKBSDBW4RA
        customerDetails:
          $ref: "#/components/schemas/CustomerDetails"
          description: Details about the customer who owns this Payout Target.
        status:
          type: string
          enum:
            - pending
            - active
            - cancelled
          description: Status of the Payout Target.
          example: active
        statusMessage:
          type: string
          description: Gives further detail on the status of the Payout Target. Only present when status is "cancelled".
        authUrl:
          type: string
          description: URL where the customer should be redirected to complete the Payout Target verification.
        redirectUrl:
          type: string
          description: URL where the customer will be redirected after completing the Payout Target verification.
        type:
          type: string
          enum:
            - bankAccount
            - transfiya
          description: Type of Payout Target created.
        createdAt:
          type: string
          format: date-time
          description: ISO string indicating when the Payout Target was created.
        updatedAt:
          type: string
          format: date-time
          description: ISO string indicating when the Payout Target was last updated.
      required:
        - id
        - customerId
        - status
        - type
        - createdAt
        - updatedAt
    PayoutTargetDetails:
      type: object
      properties:
        reference:
          type: string
          description: Reference sent in by merchant to identify Payout Target.
        description:
          type: string
          description: An extra metadata field that can be included for visibility.
        type:
          type: string
          description: Type of Payout Target created.
          enum: [bankAccount, transfiya]
    PayoutRequest:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this Payout Request.
          example: 01HPR8QBF5QKA313RPBSKYB7DS
        reference:
          type: string
          description: Reference sent in by merchant to identify Payout Request.
        customerId:
          type: string
          description: Reference to customer who owns the Payout Target for which the Payout Request was created.
          example: 01HPR57X6QR5ZRKEEKBSDBW4RA
        customerDetails:
          $ref: "#/components/schemas/CustomerDetails"
          description: Details about the customer who owns the Payout Target for which the Payout Request was created.
        payoutTargetId:
          type: string
          description: Reference to the Payout Target for which the Payout Request was created.
          example: 01HPR8S7YF43PV3QV16TZDC80P
        payoutTargetDetails:
          $ref: "#/components/schemas/PayoutTargetDetails"
          description: Details about the Payout Target for which the Payout Request was created.
        status:
          type: string
          enum:
            - processing
            - approved
            - cancelled
          description: Status of the Payout Request.
        statusMessage:
          type: string
          description: Gives further detail on the status of the Payout Request. Only present when status is "cancelled".
        amount:
          type: number
          description: Amount to send to the customer’s Payout Target. Must be an integer.
          example: 100000
        amountSent:
          type: number
          description: Amount sent by Payout Request. Starts at amount and changes to 0 if cancelled.
          example: 100000
        fee:
          type: number
          description: Fee charged for the transaction. This fee will be subtracted from amountCollected at settlement time.
          example: 500
        sourceMerchantAccountId:
          type: string
          description: Reference to Merchant Account. Safe to ignore if Merchant Accounts are not being used.
        createdAt:
          type: string
          format: date-time
          description: ISO string indicating when the Payout Request was created.
        updatedAt:
          type: string
          format: date-time
          description: ISO string indicating when the Payout Request was last updated.
      required:
        - id
        - sourceMerchantAccountId
        - customerId
        - payoutTargetId
        - status
        - amount
        - amountSent
        - fee
        - createdAt
        - updatedAt

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
